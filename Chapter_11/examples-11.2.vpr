/**
 * This subchapter focuses on loop termination.
 */

method Loops11200()
    decreases
{
    var x: Int
    var y: Int

    /**
     * This example uses a simple loop body and invariant to
     * prove termination.
     */
    x := 0
    y := 191
    while(7 <= y)
        invariant 0 <= 7 && 7 * x + y == 191
        decreases y
    {
        y := y -7
        x := x + 1
    }
}

method Loops11201()
    decreases
{
    var x: Int
    var y: Int

    /**
     * This loop terminates after a single execution.
     */
    x := 0
    y := 191
    while(7 <= y)
        invariant 0 <= y && 7 * x + y == 191
        decreases
    {
        x := 27
        y := 2
    }
}

method Loops112020()
    decreases
{
    /**
     * This example does not terminate. This is because we
     * do not have a lower bound on x or an upper bound on y.
     *
     * var x: Int
     * var y: Int
     *
     * x := 0
     * y := 191
     * while(7 <= y)
     *     invariant 0 <= y && 7 * x + y == 191
     *     decreases x
     * {
     *     x := x - 1
     *     y := y + 7
     * }
     */
}

method Loops112021()
    decreases
{
    /**
     * This example does also not terminate.
     *
     * var x: Int
     * var y: Int
     *
     * x := 0
     * y := 191
     * while(7 <= y)
     *     invariant 0 <= y && 7 * x + y == 191
     *     invariant 7 <= y
     *     decreases x
     * {
     *     x := x - 1
     *     y := y + 7
     * }
     */
}